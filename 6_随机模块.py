# -*- coding: utf-8 -*-
# 摘自 https://zhuanlan.zhihu.com/p/24309547

import numpy as np
import numpy.random as random

# 设置随机数种子
random.seed(42)

# 产生一个1x3，[0,1)之间的浮点型随机数
random.rand(1, 3)
# [[0.37454012 0.95071431 0.73199394]]

# 产生一个[0,1)之间的浮点型随机数
random.random()      # 0.5986584841970366

# 下边4个没有区别，都是按照指定大小产生[0,1)之间的浮点型随机数array
random.random((3, 3))
random.sample((3, 3))
random.random_sample((3, 3))
random.ranf((3, 3))
'''
[[0.17052412 0.06505159 0.94888554]
 [0.96563203 0.80839735 0.30461377]
 [0.09767211 0.68423303 0.44015249]]
'''

# 产生10个[1,6)之间的浮点型随机数
5*random.random(10) + 1
# [1.61019117 3.47588455 1.17194261 5.54660201 2.29389991 4.31261142
#  2.55855538 3.60034011 3.7335514  1.92427228]
random.uniform(1, 6, 10)
# [5.84792314 4.87566412 5.69749471 5.47413675 3.98949989 5.60937118
#  1.44246251 1.97991431 1.22613644 2.62665165]

# 产生10个[1,6)之间的整型随机数
random.randint(1, 6, 10)        # [5 2 5 2 1 4 4 4 5 1]

# 产生2x5的标准正态分布样本
random.normal(size=(5, 2))
'''
[[-0.84341992 -0.51332541]
 [-0.0435368  -0.27530091]
 [-1.56306679 -0.79563099]
 [ 0.9305844   0.67776741]
 [ 0.69844026  0.17360206]]
'''

# 产生5个，n=5，p=0.5的二项分布样本
random.binomial(n=5, p=0.5, size=5)     # [3 4 4 2 1]



a = np.arange(10)       # [0 1 2 3 4 5 6 7 8 9]

# 从a中有回放的随机采样7个
random.choice(a, 7)     # [6 6 7 4 2 7 5]

# 从a中无回放的随机采样7个
random.choice(a, 7, replace=False)      # [6 1 3 8 7 5 4]

# 对a进行乱序并返回一个新的array
b = random.permutation(a)       # [4 7 8 3 5 1 0 2 9 6]

# 对a进行in-place乱序
random.shuffle(a)
print(a)        # [1 8 5 2 9 7 4 3 0 6]

# 生成一个长度为9的随机bytes序列并作为str返回
print(random.bytes(9))      # b'\x8e\x063\x8a\xaa\xcck\xc1\x1c'
